---
version: 0.2
phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region us-east-2)
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
  pre_build:
      commands:
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY:$TAG"'@' k8s-deployment-service.yaml
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - docker build -t sample-dotnet-app .

  post_build:
    commands:
      - docker push 344101797155.dkr.ecr.us-east-2.amazonaws.com/my-demo-repo:latest
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::344101797155:role/EksCodeBuildKubectlRole --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name eksdemo1
      - kubectl apply -f k8s-deployment-service.yaml
      - printf '[{"name":"eks-deployment","imageUri":"%s"}]' 344101797155.dkr.ecr.us-east-2.amazonaws.com/my-demo-repo:latest > build.json
artifacts:
  files: build.json
